name: KenyaEMR CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  TURBO_API: 'http://127.0.0.1:9080'
  TURBO_TOKEN: 'turbo-token'
  TURBO_TEAM: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Run lint, type checks and tests
        run: yarn verify --cache-dir=.turbo

      - name: Run build
        run: yarn turbo run build --concurrency=10

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: packages/**/dist
          compression-level: 0
          overwrite: true
          

  pre_release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Version
        run: yarn workspaces foreach --worktree --topological --exclude @kenyaemr/esm-3.x-apps version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}"

      - name: Run build
        run: yarn turbo run build --concurrency=10

      - name: Git config and commit
        run: |
          git config user.email "info@thepalladiumgroup.com"
          git config user.name "KenyaEMR CI"
          git add . && git commit -m "Prerelease version" --no-verify

      - name: Pre-release
        run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" && yarn run ci:prepublish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'release' }}
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Setup local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ env.TURBO_TOKEN }}

      - name: Run build
        run: yarn turbo run build --concurrency=10

      - name: Git config and commit
        run: |
          git config user.email "info@thepalladiumgroup.com"
          git config user.name "KenyaEMR CI"
          git add . && git commit -m "Prerelease version" --no-verify
          
      - name: Publish
        run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" && yarn run ci:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}